---
# üëå Bonne pratique, ne pas h√©siter √† stocker les commandes manuelles, au cas ou
#     Recharger la configuration de nginx
#         nginx -s reload
#     Forcer le d√©marrage de nginx
#         /etc/init.d/nginx start

- name: D√©marrer le service nginx
  service:
    name: nginx
    # Lancement au d√©marrage du syt√®me
    enabled: true
    # Lancement lors de l'execution de ce cookbook
    state: started

# üëå Bonne pratique, ne pas h√©siter √† stocker les commandes manuelles, au cas ou
#     V√©rifier le status de nginx
#         /etc/init.d/nginx status
#     Forcer le d√©marrage de nginx
#         /etc/init.d/nginx start

# index.html √† la priorit√© sur le fichier par d√©faut de nginx index.nginx-debian.html...
- name: Supprimer les eventuels fichiers de la suite du script, afin d'autoriser les relances de scripts
  file:
    path: /var/www/html/index.html
    state: absent

- name: Remplacer le titre du site
  # On ne change qu'une ligne
  lineinfile:
    # La ligne qui contient <h1>
    regexp: '^<h1>'
    # Est remplac√©e par notre texte
    line: '<h1>Yay tout fonctionne !</h1>'
    # Dans ce fichier
    path: '/var/www/html/index.nginx-debian.html'

- name: V√©rifier la connexion au site (GET) et que la page renvoie un status 200
  uri:
    url: http://localhost:80 # OK

- name: "On peut m√™me v√©rifier que les mots 'Yay tout fonctionne !' sont pr√©sents sur la page !"
  uri:
    url: http://localhost:80
    return_content: yes
  register: da_webpage
  # Erreur si ils ne sont pas la
  failed_when: "'Yay tout fonctionne !' not in da_webpage.content"

- debug:
    msg:
      - 'Affichage du contenu de la page :'
      - '{{ da_webpage.content }}'
...
